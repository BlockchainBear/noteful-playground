{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/m1/Documents/GitHub/noteful-playground/src/AddNote/AddNote.js\";\nimport React from 'react';\nimport AppContext from '../AppContext';\nimport PropTypes from 'prop-types';\n\nclass AddNote extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      content: '',\n      folderId: '',\n      modified: '',\n      touched: false\n    };\n\n    this.formUpdate = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        touched: true\n      });\n    };\n\n    this.handleAddNote = e => {\n      e.preventDefault();\n      const url = `http://localhost:9090/notes`;\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          content: this.state.content,\n          folderId: this.state.folderId,\n          modified: this.state.modified\n        })\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(event => Promise.reject(event));\n        } else {\n          return response.json();\n        }\n      }).then(responseJson => {\n        this.context.handleAddNote(responseJson);\n        this.props.history.goBack();\n      }).catch(() => alert('Something went wrong, please try again after refreshing page.'));\n    };\n\n    this.getFolderOptions = () => {\n      let folderOptions = this.context.folders.map(folder => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.id,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this);\n      });\n      return folderOptions;\n    };\n\n    this.setModified = () => {\n      let today = new Date();\n      let todayIso = today.toISOString();\n      this.setState({\n        modified: todayIso\n      });\n    };\n\n    this.validateName = () => {\n      if (this.state.name === '') {\n        return true;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setModified();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-note-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: this.props.history.goBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"note-add-form\",\n        onSubmit: event => this.handleAddNote(event),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"#name\",\n          children: \"Note name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          onChange: e => this.formUpdate(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), this.validateName() && this.state.touched && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: \"^The name field must not be left blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"#content\",\n          children: \"Note content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          cols: \"50\",\n          id: \"content\",\n          onChange: e => this.formUpdate(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"#folderId\",\n          children: \"Select a folder:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"Folder\",\n          id: \"folderId\",\n          onChange: e => this.formUpdate(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select a Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), this.getFolderOptions()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-note-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-note\",\n            disabled: this.validateName(),\n            children: \"Submit New Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAddNote.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n};\nAddNote.contextType = AppContext;\nAddNote.propTypes = {\n  history: PropTypes.object.isRequired\n};\nexport default AddNote;","map":{"version":3,"sources":["/Users/m1/Documents/GitHub/noteful-playground/src/AddNote/AddNote.js"],"names":["React","AppContext","PropTypes","AddNote","Component","state","name","content","folderId","modified","touched","formUpdate","event","setState","target","id","value","handleAddNote","e","preventDefault","url","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Promise","reject","responseJson","context","props","history","goBack","catch","alert","getFolderOptions","folderOptions","folders","map","folder","setModified","today","Date","todayIso","toISOString","validateName","componentDidMount","render","color","defaultProps","contextType","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppContext from '../AppContext';\nimport PropTypes from 'prop-types';\n\nclass AddNote extends React.Component {\n  static defaultProps = {\n    history: { goBack: () => {} },\n  };\n  state = { name: '', content: '', folderId: '', modified: '', touched: false };\n\n  static contextType = AppContext;\n\n  formUpdate = (event) => {\n    this.setState({ [event.target.id]: event.target.value, touched: true });\n  };\n\n  handleAddNote = (e) => {\n    e.preventDefault();\n    const url = `http://localhost:9090/notes`;\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        content: this.state.content,\n        folderId: this.state.folderId,\n        modified: this.state.modified,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((event) => Promise.reject(event));\n        } else {\n          return response.json();\n        }\n      })\n      .then((responseJson) => {\n        this.context.handleAddNote(responseJson);\n        this.props.history.goBack();\n      })\n      .catch(() =>\n        alert(\n          'Something went wrong, please try again after refreshing page.'\n        )\n      );\n  };\n\n  getFolderOptions = () => {\n    let folderOptions = this.context.folders.map((folder) => {\n      return (\n        <option key={folder.id} value={folder.id}>\n          {folder.name}\n        </option>\n      );\n    });\n    return folderOptions;\n  };\n\n  setModified = () => {\n    let today = new Date();\n    let todayIso = today.toISOString();\n    this.setState({ modified: todayIso });\n  };\n\n  componentDidMount() {\n    this.setModified();\n  }\n\n  validateName = () => {\n    if (this.state.name === '') {\n      return true;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"add-note-page\">\n        <button className=\"back-button\" onClick={this.props.history.goBack}>\n          Back\n        </button>\n        \n        <form className=\"note-add-form\" onSubmit={(event) => this.handleAddNote(event)}>\n          <label htmlFor=\"#name\">Note name:</label>\n          <br />\n          <input id=\"name\" onChange={(e) => this.formUpdate(e)}></input>\n          {this.validateName() && this.state.touched && (\n            <p style={{ color: 'red' }}>\n              ^The name field must not be left blank\n            </p>\n          )}\n          <br />\n\n          <label htmlFor=\"#content\">Note content:</label>\n          <br />\n          <textarea\n            rows=\"4\"\n            cols=\"50\"\n            id=\"content\"\n            onChange={(e) => this.formUpdate(e)}\n          />\n          <br />\n          <label htmlFor=\"#folderId\">Select a folder:</label>\n          <br />\n          <select\n            name=\"Folder\"\n            id=\"folderId\"\n            onChange={(e) => this.formUpdate(e)}\n          >\n            <option>Select a Folder</option>\n            {this.getFolderOptions()}\n          </select>\n          <br />\n          <div className=\"submit-note-div\">\n            <button className=\"submit-note\" disabled={this.validateName()}>\n              Submit New Note\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddNote.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default AddNote;"]},"metadata":{},"sourceType":"module"}