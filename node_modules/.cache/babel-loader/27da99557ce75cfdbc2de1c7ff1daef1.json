{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/m1/Documents/GitHub/noteful-playground/src/AddFolder/AddFolder.js\";\nimport React from 'react';\nimport AppContext from '../AppContext';\nimport PropTypes from 'prop-types';\n\nclass AddFolder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folderName: ''\n    };\n\n    this.setFolderName = event => {\n      this.setState({\n        folderName: event.target.value\n      });\n    };\n\n    this.handleAddFolder = e => {\n      e.preventDefault();\n      const url = `http://localhost:9090/folders`;\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.folderName\n        })\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(event => Promise.reject(event));\n        } else {\n          return response.json();\n        }\n      }).then(responseJson => {\n        this.context.handleAddFolder(responseJson);\n        this.setState({\n          folderName: ''\n        });\n        this.props.history.goBack();\n      }).catch(() => alert('Oops!'));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-folder\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: this.props.history.goBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"folder-add-form\",\n        onSubmit: event => this.handleAddFolder(event),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"#add-folder\",\n          children: \"Folder Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"add-folder\",\n          onChange: this.setFolderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-folder\",\n          children: \"Submitr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAddFolder.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n};\nAddFolder.contextType = AppContext;\nAddFolder.propTypes = {\n  history: PropTypes.object.isRequired\n};\nexport default AddFolder;","map":{"version":3,"sources":["/Users/m1/Documents/GitHub/noteful-playground/src/AddFolder/AddFolder.js"],"names":["React","AppContext","PropTypes","AddFolder","Component","state","folderName","setFolderName","event","setState","target","value","handleAddFolder","e","preventDefault","url","fetch","method","headers","body","JSON","stringify","name","then","response","ok","json","Promise","reject","responseJson","context","props","history","goBack","catch","alert","render","defaultProps","contextType","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAItCC,KAJsC,GAI9B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAJ8B;;AAAA,SAQtCC,aARsC,GAQrBC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd;AACD,KAVqC;;AAAA,SAYtCC,eAZsC,GAYnBC,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,GAAG,GAAI,+BAAb;AAEAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFA;AAKTC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC;AAAnB,SAAf;AALG,OAAN,CAAL,CAOGiB,IAPH,CAOSC,QAAD,IAAc;AAClB,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,iBAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBf,KAAD,IAAWmB,OAAO,CAACC,MAAR,CAAepB,KAAf,CAAhC,CAAP;AACD,SAFD,MAEO;AACL,iBAAOgB,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,OAbH,EAcGH,IAdH,CAcSM,YAAD,IAAkB;AACtB,aAAKC,OAAL,CAAalB,eAAb,CAA6BiB,YAA7B;AACA,aAAKpB,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAE;AAAd,SAAd;AACA,aAAKyB,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACD,OAlBH,EAmBGC,KAnBH,CAmBS,MAAMC,KAAK,CAAC,OAAD,CAnBpB;AAoBD,KApCqC;AAAA;;AAsCtCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,QAAQ,EAAGzB,KAAD,IAAW,KAAKI,eAAL,CAAqBJ,KAArB,CAFvB;AAAA,gCAIE;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAO,UAAA,EAAE,EAAC,YAAV;AAAuB,UAAA,QAAQ,EAAE,KAAKD;AAAtC;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAxDqC;;AAAlCJ,S,CACGkC,Y,GAAe;AACpBL,EAAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAAE,MAAM,CAAE;AAAlB;AADW,C;AADlB9B,S,CAMGmC,W,GAAcrC,U;AAqDvBE,SAAS,CAACoC,SAAV,GAAsB;AACpBP,EAAAA,OAAO,EAAE9B,SAAS,CAACsC,MAAV,CAAiBC;AADN,CAAtB;AAIA,eAAetC,SAAf","sourcesContent":["import React from 'react';\nimport AppContext from '../AppContext';\nimport PropTypes from 'prop-types';\n\nclass AddFolder extends React.Component {\n  static defaultProps = {\n    history: { goBack: () => {} },\n  };\n  state = { folderName: '' };\n\n  static contextType = AppContext;\n\n  setFolderName = (event) => {\n    this.setState({ folderName: event.target.value });\n  };\n\n  handleAddFolder = (e) => {\n    e.preventDefault();\n    const url = `http://localhost:9090/folders`;\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ name: this.state.folderName }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((event) => Promise.reject(event));\n        } else {\n          return response.json();\n        }\n      })\n      .then((responseJson) => {\n        this.context.handleAddFolder(responseJson);\n        this.setState({ folderName: '' });\n        this.props.history.goBack();\n      })\n      .catch(() => alert('Oops!'));\n  };\n\n  render() {\n    return (\n      <div className=\"add-folder\">\n        <button className=\"back-button\" onClick={this.props.history.goBack}>\n          Back\n        </button>\n        <form\n          className=\"folder-add-form\"\n          onSubmit={(event) => this.handleAddFolder(event)}\n        >\n          <label htmlFor=\"#add-folder\">Folder Name:</label>\n          <br />\n          <input id=\"add-folder\" onChange={this.setFolderName}></input>\n          <br />\n          <button className=\"submit-folder\">Submitr</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddFolder.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default AddFolder;"]},"metadata":{},"sourceType":"module"}